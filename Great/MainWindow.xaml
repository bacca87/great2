<Fluent:RibbonWindow x:Class="Great.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:Gmap="clr-namespace:GMap.NET.WindowsPresentation;assembly=GMap.NET.WindowsPresentation"
    Title="Great 2.0" 
    Width="1024" 
    Height="768"
    WindowStartupLocation="CenterScreen" 
    WindowState="Maximized"
    Loaded="RibbonWindow_Loaded">
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />            
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Fluent:Ribbon Grid.Row="0" Grid.ColumnSpan="2">
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Header="FILE">
                    <Fluent:BackstageTabControl Name="menuBackstageTabControl" SelectionChanged="BackstageTabControl_SelectionChanged">
                        <Fluent:BackstageTabItem Header="Informations"/>
                        <Fluent:BackstageTabItem Name="factoriesBackstageTab" Header="Factories">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <DataGrid Name="factoriesDataGrid"
                                    Grid.RowSpan="2" 
                                    Grid.Column="0" 
                                    Grid.Row="0"
                                    Margin="0,0,0,0" 
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" 
                                    AutoGenerateColumns="False" 
                                    CanUserReorderColumns="False" 
                                    CanUserResizeColumns="False" 
                                    CanUserResizeRows="False" 
                                    CanUserSortColumns="False" 
                                    IsReadOnly="True"                                    
                                    SelectionMode="Single">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                        <DataGridTextColumn Header="CompanyName" Binding="{Binding CompanyName}" />
                                        <DataGridTextColumn Header="Address" Binding="{Binding Address}" />
                                        <DataGridTextColumn Header="TransferType" Binding="{Binding TransferType}" />
                                        <DataGridCheckBoxColumn Header="IsForfait" Binding="{Binding IsForfait}" />
                                    </DataGrid.Columns>                                    
                                </DataGrid>
                                <Gmap:GMapControl x:Name="mapControl" Grid.Column="1" Grid.Row="1" Zoom="13" MaxZoom="24" MinZoom="1" />
                            </Grid>
                        </Fluent:BackstageTabItem>
                        <Fluent:SeparatorTabItem />
                        <Fluent:BackstageTabItem Header="Settings"/>
                        <Fluent:Button Name="exitButton" Header="Exit" Click="exitButton_Click"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>            
            <!--Tabs-->
            <Fluent:RibbonTabItem Header="HOME">
                <Fluent:RibbonGroupBox Header="Date">
                    <Fluent:DropDownButton Name="selectMonthButton" LargeIcon="Images\calendar.png">
                        <Fluent:DropDownButton.ToolTip>
                            <Fluent:ScreenTip Title="Select Period" Text="Select the period to display." />
                        </Fluent:DropDownButton.ToolTip>
                        <Calendar x:Name="selectDateCalendar" Margin="3,0,3,0" DisplayMode="Year" DisplayModeChanged="selectDateCalendar_DisplayModeChanged" SelectedDatesChanged="selectDateCalendar_SelectedDatesChanged"/>                            
                    </Fluent:DropDownButton>
                    <Fluent:Gallery MaxItemsInRow="1">                        
                        <Fluent:Button Name="nextMonthButton" SizeDefinition="Small" Icon="Images\sign-right.png" Click="nextMonthButton_Click">
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip Title="Next Month" Text="Set the next month as current." />
                            </Fluent:Button.ToolTip>
                        </Fluent:Button>
                        <Fluent:Button Name="previousMonthButton" SizeDefinition="Small" Icon="Images\sign-left.png" Click="previousMonthButton_Click">
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip Title="Previous Month" Text="Set the previous month as current." />
                            </Fluent:Button.ToolTip>
                        </Fluent:Button>
                    </Fluent:Gallery>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Label Name="currentMonthLabel" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" Content="November 2016" FontSize="20" FontWeight="Bold">
            <Label.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="90" />
                    <ScaleTransform ScaleX="-1" ScaleY="-1"/>
                </TransformGroup>
            </Label.LayoutTransform>
        </Label>
        <DataGrid Name="workingDaysDataGrid"
                  Grid.Row="1"
                  Grid.Column="2"
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0" 
                  VerticalAlignment="Stretch" 
                  AutoGenerateColumns="False" 
                  CanUserReorderColumns="False" 
                  CanUserResizeColumns="False" 
                  CanUserResizeRows="False" 
                  CanUserSortColumns="False" 
                  IsReadOnly="True"
                  RowDetailsVisibilityMode="Collapsed"
                  SelectionMode="Single">
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Style.Setters>
                        <Setter Property="TextBlock.TextAlignment" Value="Right" />
                        <Setter Property="TextBlock.FontSize" Value="15" />
                        <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                    </Style.Setters>
                </Style>
            </DataGrid.Resources>            
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <ToggleButton
                        Click="ShowHideDetails"
                        Visibility="{Binding DataContext.HasDetails, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ToggleButton.Resources>
                            <Image x:Key="Expand" Source="Images\ExpandArrow.png" />
                            <Image x:Key="Collapse" Source="Images\CollapseArrow.png" />
                        </ToggleButton.Resources>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Content" Value="{StaticResource Expand}" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{StaticResource Collapse}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Grid>
                                    <ContentPresenter Content="{TemplateBinding Content}" Width="16" Height="16" />
                                </Grid>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Week Nr." Binding="{Binding WeekNr}" />
                <DataGridTextColumn Header="Day" Binding="{Binding Day_Display}" />
                <DataGridTextColumn Header="Total Time" Binding="{Binding TotalTime_Display}" FontWeight="Bold" />
                <DataGridTextColumn Header="Working Time" Binding="{Binding WorkingTime_Display}" />
                <DataGridTextColumn Header="Travel Time" Binding="{Binding TravelTime_Display}" />
                <DataGridTextColumn Header="Overtime 34%" Binding="{Binding Overtime34_Display}" />
                <DataGridTextColumn Header="Overtime 50%" Binding="{Binding Overtime50_Display}" />
                <DataGridTextColumn Header="Overtime 85%" Binding="{Binding Overtime85_Display}" />
                <DataGridTextColumn Header="Overtime 100%" Binding="{Binding Overtime100_Display}" />
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="workingDayDetailsDataGrid"
                                  ItemsSource="{Binding Timesheets}"
                                  Grid.Row="2"
                                  HorizontalAlignment="Stretch" 
                                  Margin="5,5,5,5"
                                  VerticalAlignment="Stretch" 
                                  AutoGenerateColumns="False" 
                                  CanUserReorderColumns="False" 
                                  CanUserResizeColumns="False" 
                                  CanUserResizeRows="False" 
                                  CanUserSortColumns="False" 
                                  IsReadOnly="True">
                            <DataGrid.Resources>
                                <Style TargetType="DataGridCell">
                                    <Style.Setters>
                                        <Setter Property="TextBlock.TextAlignment" Value="Right" />
                                    </Style.Setters>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Travel Start Time AM" Binding="{Binding TravelStartTimeAM_Display}" />
                                <DataGridTextColumn Header="Travel End Time AM" Binding="{Binding TravelEndTimeAM_Display}" />
                                <DataGridTextColumn Header="Work Start Time AM" Binding="{Binding WorkStartTimeAM_Display}" />
                                <DataGridTextColumn Header="Work End Time AM" Binding="{Binding WorkEndTimeAM_Display}" />
                                <DataGridTextColumn Header="Work Start Time PM" Binding="{Binding WorkStartTimePM_Display}" />
                                <DataGridTextColumn Header="Work End Time PM" Binding="{Binding WorkEndTimePM_Display}" />
                                <DataGridTextColumn Header="Travel Start Time PM" Binding="{Binding TravelStartTimePM_Display}" />
                                <DataGridTextColumn Header="Travel End Time PM" Binding="{Binding TravelEndTimePM_Display}" />
                                <DataGridTextColumn Header="FDL" Binding="{Binding FDL}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</Fluent:RibbonWindow>
