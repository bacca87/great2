<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:local="clr-namespace:Great2">
    <ResourceDictionary.MergedDictionaries>

        <!--Fluent Ribbon Styles-->
        <ResourceDictionary Source="pack://application:,,,/Fluent;component/Themes/Generic.xaml" />

        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />


        <!--Live Charts Styles-->
        <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Colors/material.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Size/l.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Weight/light.xaml" />

        <!--this is required always-->
        <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/base.xaml" />

    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="Image" x:Key="DisabledImageStyle">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="xctk:ColorPicker">
        
        <Setter Property="DropDownBackground" Value="{DynamicResource DefaultColorPickerBackGround}"/>
        <Setter Property="HeaderBackground" Value="{DynamicResource DefaultColorPickerBackGround}"/>
        <Setter Property="TabBackground" Value="{DynamicResource DefaultColorPickerBackGround}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultColorPickerTextForeground}"/>
        <Setter Property="HeaderForeground" Value="{DynamicResource DefaultColorPickerTextForeground}"/>
        <Setter Property="TabForeground" Value="{DynamicResource DefaultColorPickerTextForeground}"/>
    </Style>

    <Style x:Key="DefaultErrorStyle" TargetType="xctk:MaskedTextBox">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="1" >
                        <AdornedElementPlaceholder/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"  Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaskedTextBoxBase" BasedOn="{StaticResource DefaultErrorStyle}" TargetType="xctk:MaskedTextBox">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Mask" Value="00\:00" />
        <Setter Property="PromptChar" Value=" "/>
        <Setter Property="ValueDataType" Value="{x:Type sys:TimeSpan}" />
        <Setter Property="AutoSelectBehavior" Value="OnFocus" />
        <Setter Property="IsEnabled" Value="{Binding IsInputEnabled}"/>
    </Style>

    <Style TargetType="{x:Type Control}" x:Key="DatePickerTextBoxStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="FormattedDatePicker"  TargetType="DatePicker">
        <Setter Property="FirstDayOfWeek" Value="Monday"/>
        <Style.Resources>
            <Style TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBox x:Name="PART_TextBox"
                             Text="{Binding Path=SelectedDate, StringFormat='dd/MM/yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" Style="{StaticResource DatePickerTextBoxStyle}" >
                            </TextBox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="MaskedTextBoxBaseTimeSheet" BasedOn="{StaticResource MaskedTextBoxBase}" TargetType="xctk:MaskedTextBox">
        <Setter Property="Margin" Value="2.5" />
        <Setter Property="MaxLength" Value="5" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Width" Value="70" />
    </Style>

    <Style x:Key="timeSheetDatagridStyle"  TargetType="DataGridRow" BasedOn="{StaticResource MetroDataGridRow}">
        <Setter Property="BorderThickness" Value="0.5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding  Date.DayOfWeek}" Value="Saturday">
                <Setter Property="Background" Value="{DynamicResource DefaultSaturdayColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundSaturdayColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Date.DayOfWeek}" Value="Sunday">
                <Setter Property="Background" Value="{DynamicResource DefaultSundayColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundSundayColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsHoliday}" Value="True">
                <Setter Property="Background" Value="{DynamicResource DefaultHolidayColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundHolidayColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="1">
                <Setter Property="Background" Value="{DynamicResource DefaultVacationColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundVacationColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="2">
                <Setter Property="Background" Value="{DynamicResource DefaultSickColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundSickColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="3">
                <Setter Property="Background" Value="{DynamicResource DefaultHomeworkColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundHomeworkColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="4">
                <Setter Property="Background" Value="{DynamicResource DefaultSpecialLeaveColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource BestForegroundSpeclaiLeaveColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="travelstartTextBox" TargetType="xctk:MaskedTextBox" BasedOn="{StaticResource MaskedTextBoxBaseTimeSheet}" >
        <Setter Property="Background" Value="{DynamicResource DefaultTravelStartColor}" />
    </Style>

    <Style x:Key="travelendTextBox" TargetType="xctk:MaskedTextBox" BasedOn="{StaticResource MaskedTextBoxBaseTimeSheet}" >
        <Setter Property="Background" Value="{DynamicResource DefaultTravelEndColor}" />
    </Style>

    <Style x:Key="workstartTextBox" TargetType="xctk:MaskedTextBox" BasedOn="{StaticResource MaskedTextBoxBaseTimeSheet}" >
        <Setter Property="Background" Value="{DynamicResource DefaultWorkStartColor}" />
    </Style>

    <Style x:Key="workendTextBox" TargetType="xctk:MaskedTextBox" BasedOn="{StaticResource MaskedTextBoxBaseTimeSheet}" >
        <Setter Property="Background" Value="{DynamicResource DefaultWorkEndColor}" />
    </Style>

    <Style x:Key="NoHeaderTabItem" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>