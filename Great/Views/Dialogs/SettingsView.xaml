<mah:MetroWindow
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    x:Class="Great2.Views.Dialogs.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:Great2.Views.Pages"
    xmlns:util="clr-namespace:Great2.Utils"
    xmlns:date="clr-namespace:Nager.Date;assembly=Nager.Date"
    xmlns:enm="clr-namespace:Great2.Models"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"      
    xmlns:ap="clr-namespace:Great2.Utils.AttachedProperties"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:mvvm="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
    xmlns:fluent="urn:fluent-ribbon"
    xmlns:conv="clr-namespace:Great2.Utils.Converters"
    mc:Ignorable="d" 
    DataContext="{Binding Settings, Source={StaticResource Locator}}"
    Title="SettingsView"
    Width="800"
    Height="600"
    WindowStartupLocation="CenterOwner"
    ResizeMode="CanResizeWithGrip"
    ShowMinButton="False"
    ShowMaxRestoreButton="False"
    util:WindowUtilities.CloseOnEscape="True">
    <mah:MetroWindow.Resources>
        <conv:NegateBoolConverter x:Key="NegateBoolConverter"/>
    </mah:MetroWindow.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <mvvm:EventToCommand Command="{Binding LoadDataCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0" TabStripPlacement="Left">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabPanel}">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}"/>                    
                </Style>
                <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}"/>
                </Style>
            </TabControl.Resources>
            <TabItem Header="General">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0" Header="Regional Settings" HorizontalAlignment="Left" Margin="0,5">
                        <GroupBox.Resources>
                            <ObjectDataProvider x:Key="enumCountries"
                                MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                <ObjectDataProvider.MethodParameters>
                                    <x:Type TypeName="date:CountryCode"/>
                                </ObjectDataProvider.MethodParameters>
                            </ObjectDataProvider>
                        </GroupBox.Resources>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="Country:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <ComboBox
                                ItemsSource="{Binding Source={StaticResource enumCountries}}"
                                SelectedValue="{Binding Country, ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                                FontSize="15"
                                IsEditable="True"
                                Width="60"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Header="Microsoft Exchange Account" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="200"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <CheckBox Grid.Row="0" Grid.ColumnSpan="3" Content="Use windows authentication" IsChecked="{Binding UseWindowsAuthentication}" Margin="0,0,0,5"/>
                            <Label Grid.Row="1" Grid.Column="0" Content="E-Mail Address:" HorizontalAlignment="Right"/>
                            <Label Grid.Row="2" Grid.Column="0" Content="Password:" HorizontalAlignment="Right"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding EmailAddress}" IsEnabled="{Binding UseWindowsAuthentication, Converter={StaticResource NegateBoolConverter}}"/>
                            <PasswordBox Grid.Row="2" Grid.Column="1" ap:PasswordHelper.BindPassword="true" ap:PasswordHelper.BoundPassword="{Binding EmailPassword, Mode=TwoWay}" IsEnabled="{Binding UseWindowsAuthentication, Converter={StaticResource NegateBoolConverter}}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="2" Header="Advanced" HorizontalAlignment="Left" Margin="0,5">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Text="Data Directory:" VerticalAlignment="Center"/>
                            <TextBox Margin="5" Text="{Binding DataDirectory}" Width="300"/>
                            <Button Margin="0,5" Content="..." Command="{Binding SelectFolderCommand}"/>
                            <Button Margin="5,5" Content="Migrate Data" Command="{Binding MigrateDataCommand}"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="FDL">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Recipients" Margin="0,5">
                        <StackPanel Grid.Row="0">
                            <CheckBox Content="Ask for additional recipients on new orders." IsChecked="{Binding AskOrderRecipients}"/>
                            <TextBlock Text="Default email recipients for new orders (separated by &quot;;&quot;): " Margin="0,10,0,0"/>
                            <TextBox Text="{Binding NewOrderDefaultRecipients, UpdateSourceTrigger=LostFocus}"/>
                            <TextBlock Text="Cancellation request email recipients (separated by &quot;;&quot;): " Margin="0,10,0,0"/>
                            <TextBox Text="{Binding FDLCancelRequestRecipients, UpdateSourceTrigger=LostFocus}"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Header="Advanced" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5">
                        <StackPanel>
                            <CheckBox Content="Add automatically new factories." IsChecked="{Binding AutoAddFactories}" Margin="0,5,0,0"/>
                            <CheckBox Content="Auto assign factories to the new FDLs." IsChecked="{Binding AutoAssignFactories}" Margin="0,5,0,0"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Expense Accounts">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Options" Margin="0,5">
                        <StackPanel Grid.Row="0">
                            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="Default Currency:" VerticalAlignment="Center" Margin="0,0,5,0"/>                                
                                <ComboBox Grid.Column="1" Grid.Row="0" MinWidth="150" VerticalAlignment="Center"     
                                    ItemsSource="{Binding Currencies}"
                                    SelectedValue="{Binding DefaultCurrency, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" 
                                    DisplayMemberPath="Description" 
                                    SelectedValuePath="Id"
                                    FontSize="15"
                                    IsEditable="True"
                                    Width="350"/>
                            </StackPanel>
                            <CheckBox Content="Automatic daily allowance and pocket money" Margin="0,5" IsChecked="{Binding AutomaticAllowance}"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Header="Advanced" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5">
                        <StackPanel Margin="0.5">
                            <CheckBox Content="Enable excel expense accounts" IsChecked="{Binding ExcelExpenseAccount}"/>
                            <StackPanel Margin="0,5" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">CDC:</TextBlock>
                                <mah:NumericUpDown Grid.Row="3" Grid.Column="1" Value="{Binding CDC}" IsEnabled="{Binding ExcelExpenseAccount}" NumericInputMode="Numbers" HideUpDownButtons="True" Minimum="0" Width="100" Margin="2"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,0,5" Orientation="Vertical">
                                <TextBlock Text="Default email recipients for EA (separated by &quot;;&quot;): "/>
                                <TextBox Text="{Binding EANewMessageDefaultRecipients, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ExcelExpenseAccount}"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Interface">
                <Grid>
                    <Grid.Resources>
                        <ObjectDataProvider x:Key="enumSkins" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                            <ObjectDataProvider.MethodParameters>
                                <x:Type TypeName="enm:ETheme"/>
                            </ObjectDataProvider.MethodParameters>
                        </ObjectDataProvider>
                        <ObjectDataProvider x:Key="enumAcents" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                            <ObjectDataProvider.MethodParameters>
                                <x:Type TypeName="enm:EAccentColor"/>
                            </ObjectDataProvider.MethodParameters>
                        </ObjectDataProvider>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Row="0" Grid.Column="0" Header="Theme" HorizontalAlignment="Left" Margin="0,5">
                        <StackPanel Grid.Row="0" Orientation="Vertical">
                            <TextBlock Text="Skin: " VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <ComboBox 
                                ItemsSource="{Binding Source={StaticResource enumSkins}}" 
                                SelectedValue="{Binding Theme, Mode=TwoWay}" 
                                FontSize="15"
                                Width="100"/>
                            <TextBlock Text="Accent: " VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <ComboBox 
                                ItemsSource="{Binding Source={StaticResource enumAcents}}" 
                                SelectedValue="{Binding AccentColor, Mode=TwoWay}" 
                                FontSize="15"
                                Width="100"/>
                        </StackPanel>                        
                    </GroupBox>
                    <GroupBox Grid.Row="1" Grid.Column="0" Header="Colors" HorizontalAlignment="Left" Margin="0,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            
                            <CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding IsCustomSaturdayColorUsed}"  />
                            <TextBlock Grid.Row="0" Grid.Column="1">Saturday</TextBlock>
                            <xctk:ColorPicker Grid.Row="0" Grid.Column="2" SelectedColor="{Binding CustomSaturdayColor}" IsEnabled="{Binding IsCustomSaturdayColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False"/>

                            <CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding IsCustomSundayColorUsed}"  />
                            <TextBlock Grid.Row="1" Grid.Column="1">Sunday</TextBlock>
                            <xctk:ColorPicker Grid.Row="1" Grid.Column="2" SelectedColor="{Binding CustomSundayColor}" IsEnabled="{Binding IsCustomSundayColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False"/>

                            <CheckBox Grid.Row="2" Grid.Column="0" IsChecked="{Binding IsCustomHolidayColorUsed}"  />
                            <TextBlock Grid.Row="2" Grid.Column="1">Holiday</TextBlock>
                            <xctk:ColorPicker Grid.Row="2" Grid.Column="2" SelectedColor="{Binding CustomHolidayColor}" IsEnabled="{Binding IsCustomHolidayColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False" />

                            <CheckBox Grid.Row="3" Grid.Column="0" IsChecked="{Binding IsCustomVacationColorUsed}"  />
                            <TextBlock Grid.Row="3" Grid.Column="1">Vacation</TextBlock>
                            <xctk:ColorPicker Grid.Row="3" Grid.Column="2" SelectedColor="{Binding CustomVacationColor}" IsEnabled="{Binding IsCustomVacationColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False"/>

                            <CheckBox Grid.Row="4" Grid.Column="0" IsChecked="{Binding IsCustomSickColorUsed}"  />
                            <TextBlock Grid.Row="4" Grid.Column="1">Sick</TextBlock>
                            <xctk:ColorPicker Grid.Row="4" Grid.Column="2" SelectedColor="{Binding CustomSickColor}" IsEnabled="{Binding IsCustomSickColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False"/>

                            <CheckBox Grid.Row="5" Grid.Column="0" IsChecked="{Binding IsCustomHomeworkColorUsed}"  />
                            <TextBlock Grid.Row="5" Grid.Column="1">Homeworking</TextBlock>
                            <xctk:ColorPicker Grid.Row="5" Grid.Column="2" SelectedColor="{Binding CustomHomeworkColor}" IsEnabled="{Binding IsCustomHomeworkColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False"/>

                            <CheckBox Grid.Row="6" Grid.Column="0" IsChecked="{Binding IsCustomSpecialLeaveColorUsed}"  />
                            <TextBlock Grid.Row="6" Grid.Column="1">Special Leave</TextBlock>
                            <xctk:ColorPicker Grid.Row="6" Grid.Column="2" SelectedColor="{Binding CustomSpecialLeaveColor}" IsEnabled="{Binding IsCustomSpecialLeaveColorUsed}" AvailableColors="{Binding AvailableColors}" MaxDropDownWidth="320" ShowStandardColors="False"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="1" Background="{DynamicResource MahApps.Brushes.Gray10}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Save" Margin="5,10,5,10" Command="{Binding ApplyChangesCommand}"/>
                <Button Name="cancelButton" Content="Cancel" Margin="5,10,10,10" Click="CancelButton_Click"/>
            </StackPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
