<mah:MetroWindow
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    x:Class="Great.Views.Dialogs.EventsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Great.Views.Dialogs"
        xmlns:m="clr-namespace:Great.Models.DTO"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mvvm="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:conv="clr-namespace:Great.Utils.Converters"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="Events"
        DataContext="{Binding Events, Source={StaticResource Locator}}">
    <Window.Resources>
        <CollectionViewSource x:Key="VacationsCollectionView" Source="{Binding Events}" IsLiveSortingRequested="True" >
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <Grid Margin="10,0,10,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*"/>
            <ColumnDefinition Width="40*"/>
        </Grid.ColumnDefinitions>
        <DataGrid Name="vacationsDataGridView"
                Grid.Column="0"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False" 
                CanUserReorderColumns="False" 
                CanUserResizeColumns="False" 
                CanUserResizeRows="False" 
                CanUserSortColumns="False" 
                IsReadOnly="True"                  
                SelectionMode="Single"
                HeadersVisibility="Column"
                ItemsSource="{Binding Source={StaticResource VacationsCollectionView}}"
                SelectedItem="{Binding SelectedEvent}"
                VirtualizingPanel.ScrollUnit ="Item" 
                VirtualizingPanel.VirtualizationMode="Standard">
            <DataGrid.Resources>
                <Style x:Key="BaseCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                    <Style.Setters>
                        <Setter Property="TextBlock.FontSize" Value="15" />
                        <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style.Setters>
                </Style>
                <Style x:Key="CenterAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                    <Style.Setters>
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style.Setters>
                </Style>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>

                <conv:EventStatusToImageConverter x:Key="VacationStatusToImageConverter"/>
                <conv:EventStatusToTextConverter x:Key="VacationStatusToTextConverter"/>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Status" CellStyle="{StaticResource CenterAligned}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding Status, Converter={StaticResource VacationStatusToImageConverter}}" Stretch="None">
                                    <Image.ToolTip>
                                        <TextBlock Text="{Binding Status, Converter={StaticResource VacationStatusToTextConverter}}"/>
                                    </Image.ToolTip>
                                </Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Title" Binding="{Binding Title}"  FontWeight="Bold" />
                <DataGridTextColumn Header="Start Date" Binding="{Binding StartDate,StringFormat='dd/MM/yyyy' }"/>
                <DataGridTextColumn Header="End Date" Binding="{Binding EndDate,StringFormat='dd/MM/yyyy'}"/>
                <DataGridTextColumn Header="Description"  Binding="{Binding Description}" />
                <DataGridTextColumn Header="Approver"  Binding="{Binding Approver}" />
                <DataGridTextColumn Header="Approved Date" Binding="{Binding ApprovationDateTime}" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Column="1" Margin="10,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock  Margin="5" Grid.Row="0" Text="Category:" VerticalAlignment="Center"/>
            <ComboBox  Grid.Row="1"
                                  SelectedItem="{Binding SelectedEvent.Type1}" 
                                  SelectedValue="{Binding SelectedEvent.Type}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  DisplayMemberPath="Name" 
                                  SelectedValuePath="Id">
                <ComboBox.Resources>
                    <CollectionViewSource x:Key="Items" Source="{Binding EventTypes}" />
                </ComboBox.Resources>
                <ComboBox.ItemsSource>
                    <CompositeCollection>
                        <m:EventTypeDTO/>
                        <CollectionContainer Collection="{Binding Source={StaticResource Items}}" />
                    </CompositeCollection>
                </ComboBox.ItemsSource>
            </ComboBox>
            <TextBlock  Margin="5" Grid.Row="2" Text="Title:" VerticalAlignment="Center"/>
            <TextBox Grid.Row="3" Text="{Binding SelectedEvent.Title, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
            <TextBlock   Margin="5" Grid.Row="4" Text="Location:" VerticalAlignment="Center"/>
            <TextBox Grid.Row="5" Text="{Binding SelectedEvent.Location, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
            <TextBlock  Margin="5" Grid.Row="6" Text="Start Date:" VerticalAlignment="Center"/>
            <Grid Grid.Row="7" VerticalAlignment="Center" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <DatePicker Grid.Column="0" SelectedDate="{Binding SelectedEvent.StartDate}"  />
                <ComboBox  Grid.Column="2"
                           ItemsSource="{Binding Hours}"
                                  SelectedItem="{Binding BeginHour}" 
                                  SelectedValue="{Binding BeginHour}" 
                                  IsEnabled="{Binding IsInputEnabled}"              
                                  SelectedIndex="0">
                </ComboBox>
                <ComboBox  Grid.Column="6"
                           ItemsSource="{Binding Minutes}"
                                  SelectedItem="{Binding BeginMinutes}" 
                                  SelectedValue="{Binding BeginMinutes}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  SelectedIndex="0">

                </ComboBox>
            </Grid>

            <TextBlock  Margin="5" Grid.Row="8" Text="End Date:" VerticalAlignment="Center"/>
            <Grid Grid.Row="9" VerticalAlignment="Center" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <DatePicker Grid.Column="0" SelectedDate="{Binding SelectedEvent.EndDate}"/>
                <ComboBox  Grid.Column="2"
                           ItemsSource="{Binding Hours}"
                                  SelectedItem="{Binding EndHour}" 
                                  SelectedValue="{Binding EndHour}" 
                                  IsEnabled="{Binding IsInputEnabled}"              
                                  SelectedIndex="0">
                </ComboBox>
                <ComboBox  Grid.Column="6"
                           ItemsSource="{Binding Minutes}"
                                  SelectedItem="{Binding EndMinutes}" 
                                  SelectedValue="{Binding EndMinutes}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  SelectedIndex="0">

                </ComboBox>
            </Grid>

            <TextBlock   Grid.Row="10" Margin="5" Text="Description:" VerticalAlignment="Center"/>
            <TextBox    Grid.Row="11" Text="{Binding SelectedEvent.Description, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
            <CheckBox   Grid.Row="12" Margin="5" FlowDirection="LeftToRight"  Content="All Day Event" IsChecked="{Binding SelectedEvent.IsAllDay, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
            <TextBlock Grid.Column="0" Margin="0,0,0,5" FontSize="20" FontWeight="Bold" HorizontalAlignment="Left"></TextBlock>

            <StackPanel Grid.Row="13" Orientation="Horizontal">
                <Button Margin="10" Content="New" Command="{Binding NewCommand}" />
                <Button Margin="10" Content="Clear" Command="{Binding ClearCommand}" CommandParameter="{Binding SelectedEvent}" />
                <Button Margin="10" Content="Save" Command="{Binding SaveCommand}" CommandParameter="{Binding SelectedEvent}" />
                <Button Margin="10" Content="Accepted" Command="{Binding MarkAsAcceptedCommand}" CommandParameter="{Binding SelectedEvent}" />
                <Button Margin="10" Content="Cancelled" Command="{Binding MarkAsCancelledCommand}" CommandParameter="{Binding SelectedEvent}" />
                <Button Margin="10" Content="Req Cancel" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedEvent}" />
            </StackPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
