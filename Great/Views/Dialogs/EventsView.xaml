<mah:MetroWindow
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    x:Class="Great2.Views.Dialogs.EventsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Great2.Views.Dialogs"
        xmlns:m="clr-namespace:Great2.Models.DTO"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mvvm="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:conv="clr-namespace:Great2.Utils.Converters"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:Fluent="urn:fluent-ribbon"
    mc:Ignorable="d"
        Title="Events"
    Closing="MetroWindow_Closing"   
        DataContext="{Binding Events, Source={StaticResource Locator}}">
    <Window.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <conv:CompareIntConverter x:Key="CompareIntConverter"/>
        <!--<CollectionViewSource x:Key="VacationsCollectionView" Source="{Binding FilteredEvents}" IsLiveSortingRequested="True" >
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="StartDate" Direction="Descending" />

            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>-->
    </Window.Resources>
    <Grid Margin="10,0,10,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition  />
        </Grid.RowDefinitions>

        <Fluent:Ribbon  Grid.Row="0">

            <!--Contextual Tab Groups-->
            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup x:Name="EditEvents"
                                     Header="Events" 
                                     DataContext="{Binding Events, Source={StaticResource Locator}}"
                                     Visibility="{Binding ShowEditMenu, Converter={StaticResource BoolToVisibilityConverter}}"                                     
                                     Background="Green" 
                                     BorderBrush="Green" >
                </Fluent:RibbonContextualTabGroup>
            </Fluent:Ribbon.ContextualGroups>
            <!--Tabs-->
            <Fluent:RibbonTabItem Header="Events">
                <Fluent:RibbonGroupBox Header="Tools">
                    <Fluent:Button Header="New Event" Command="{Binding NewCommand}" LargeIcon="pack://application:,,,/Great2;component/Images/32/sign-add.png">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="New Event" Text="Add a new Event" />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Header="Request Cancellation" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedEvent}" SizeDefinition="Large" LargeIcon="pack://application:,,,/Great2;component/Images/32/sign-ban.png">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Require cancellation" Text="Require the current event cancellation" />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Filters">
                    <Fluent:CheckBox Header="Show only vacations" IsChecked="{Binding ShowOnlyVacations}">

                    </Fluent:CheckBox>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Year">
                    <Fluent:TextBox Text="{Binding CurrentYear, Mode=TwoWay}" TextAlignment="Center" PreviewTextInput="yearTextBox_PreviewTextInput" SizeDefinition="Small" MaxLength="4">
                        <Fluent:TextBox.ToolTip>
                            <Fluent:ScreenTip Title="Current Year" Text="Set the current year." />
                        </Fluent:TextBox.ToolTip>
                    </Fluent:TextBox>
                    <Fluent:Gallery MaxItemsInRow="2">
                        <Fluent:Button Command="{Binding PreviousYearCommand}" SizeDefinition="Small" Icon="pack://application:,,,/Great2;component/Images/24/sign-left.png">
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip Title="Previous Year" Text="Set the previous year." />
                            </Fluent:Button.ToolTip>
                        </Fluent:Button>
                        <Fluent:Button Command="{Binding NextYearCommand}" SizeDefinition="Small" Icon="pack://application:,,,/Great2;component/Images/24/sign-right.png">
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip Title="Next Year" Text="Set the next year." />
                            </Fluent:Button.ToolTip>
                        </Fluent:Button>
                    </Fluent:Gallery>
                </Fluent:RibbonGroupBox>

            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="EDIT" 
                                  DataContext="{Binding Events, Source={StaticResource Locator}}"                              
                                  IsSelected="{Binding ShowEditMenu}"                                   
                                  Group="{Binding Source={x:Reference EditEvents}}">
                <Fluent:RibbonGroupBox Header="Edit">
                    <Fluent:Button Header="Save" Command="{Binding SaveCommand}" CommandParameter="{Binding SelectedEvent}" SizeDefinition="Large" LargeIcon="pack://application:,,,/Great2;component/Images/32/floppy.png">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Save Event" Text="Save the current event" />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65*"/>
                <ColumnDefinition Width="35*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition ></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid Name="vacationsDataGridView" Grid.Column="0"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False" 
                CanUserReorderColumns="False" 
                CanUserResizeColumns="False" 
                CanUserResizeRows="False" 
                CanUserSortColumns="True" 
                IsReadOnly="True"                  
                SelectionMode="Single"
                HeadersVisibility="Column"
                ItemsSource="{Binding FilteredEvents}"
                SelectedItem="{Binding SelectedEvent}"
                ScrollViewer.CanContentScroll="True" 
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                VirtualizingPanel.ScrollUnit ="Item" 
                VirtualizingPanel.VirtualizationMode="Standard">
                <DataGrid.Resources>
                    <Style x:Key="BaseCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                        <Style.Setters>
                            <Setter Property="TextBlock.FontSize" Value="15" />
                            <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="CenterAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                        <Style.Setters>
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style.Setters>
                    </Style>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>

                    <conv:EventToImageConverter x:Key="EventToImageConverter"/>
                    <conv:EventToTextConverter x:Key="EventToTextConverter"/>

                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Status" CellStyle="{StaticResource CenterAligned}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Converter={StaticResource EventToImageConverter}}" Stretch="None">
                                        <Image.ToolTip>
                                            <TextBlock Text="{Binding Converter={StaticResource EventToTextConverter}}"/>
                                        </Image.ToolTip>
                                    </Image>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Title" Binding="{Binding Title}"  FontWeight="Bold" />
                    <DataGridTextColumn Header="Start Date" Binding="{Binding StartDate,StringFormat='dd/MM/yyyy' }"/>
                    <DataGridTextColumn Header="End Date" Binding="{Binding EndDate,StringFormat='dd/MM/yyyy'}"/>
                    <DataGridTextColumn Header="Description"  Binding="{Binding Description}" />
                    <DataGridTextColumn Header="Notes"  Binding="{Binding Notes}" />
                    <DataGridTextColumn Header="Approver"  Binding="{Binding Approver}" />
                    <DataGridTextColumn Header="Approved Date" Binding="{Binding ApprovationDate, StringFormat='dd/MM/yyyy HH:mm:ss'}" />
                </DataGrid.Columns>
            </DataGrid>
            <ScrollViewer Grid.Column="1"  Margin="10,0,0,0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Grid >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding GotFocusCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding LostFocusCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <CheckBox   Grid.Row="0" Margin="5" FlowDirection="LeftToRight"  Content="All Day Event"  IsChecked="{Binding SelectedEvent.IsAllDay, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
                    <TextBlock  Margin="5" Grid.Row="1" Text="Category:" VerticalAlignment="Center"/>
                    <ComboBox  Grid.Row="2"
                                  SelectedItem="{Binding SelectedEvent.Type1}" 
                                  SelectedValue="{Binding SelectedEvent.Type, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  DisplayMemberPath="Name" 
                                  SelectedValuePath="Id">
                        <ComboBox.Resources>
                            <CollectionViewSource x:Key="Items" Source="{Binding EventTypes}" />
                        </ComboBox.Resources>
                        <ComboBox.ItemsSource>
                            <CompositeCollection>
                                <m:EventTypeDTO/>
                                <CollectionContainer Collection="{Binding Source={StaticResource Items}}" />
                            </CompositeCollection>
                        </ComboBox.ItemsSource>
                    </ComboBox>
                    <TextBlock  Margin="5" Grid.Row="3" Text="Title:" VerticalAlignment="Center"/>
                    <TextBox Grid.Row="4" Text="{Binding SelectedEvent.Title, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
                    <TextBlock   Margin="5" Grid.Row="5" Text="Location:" VerticalAlignment="Center"/>
                    <TextBox Grid.Row="6" Text="{Binding SelectedEvent.Location, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
                    <TextBlock  Margin="5" Grid.Row="7" Text="Start Date:" VerticalAlignment="Center"/>
                    <Grid Grid.Row="8" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <DatePicker Style="{DynamicResource FormattedDatePicker}" Grid.Column="0" SelectedDate="{Binding SelectedEvent.StartDate,ValidatesOnDataErrors=true, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged}"  />
                        <ComboBox  Grid.Column="2"
                           ItemsSource="{Binding Hours}"
                                  SelectedItem="{Binding SelectedEvent.BeginHour}" 
                                  SelectedValue="{Binding SelectedEvent.BeginHour,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" 
                                  IsEnabled="{Binding IsInputEnabled}"  
                                  Visibility="{Binding ShowHourTimeFields, Converter={StaticResource BoolToVisibilityConverter}}"
                                  SelectedIndex="0">
                        </ComboBox>
                        <ComboBox  Grid.Column="6"
                           ItemsSource="{Binding Minutes}"
                                  SelectedItem="{Binding SelectedEvent.BeginMinutes}" 
                                  SelectedValue="{Binding SelectedEvent.BeginMinutes,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  Visibility="{Binding ShowHourTimeFields, Converter={StaticResource BoolToVisibilityConverter}}"
                                  SelectedIndex="0">

                        </ComboBox>
                    </Grid>
                    <TextBlock  Margin="5" Grid.Row="9" Text="End Date:" VerticalAlignment="Center"/>
                    <Grid Grid.Row="10" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <DatePicker Style="{DynamicResource FormattedDatePicker}" Grid.Column="0" SelectedDate="{Binding SelectedEvent.EndDate,ValidatesOnDataErrors=true, NotifyOnValidationError=true,UpdateSourceTrigger=PropertyChanged}"/>
                        <ComboBox  Grid.Column="2"
                           ItemsSource="{Binding Hours}"
                                  SelectedItem="{Binding SelectedEvent.EndHour}" 
                                  SelectedValue="{Binding SelectedEvent.EndHour,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  Visibility="{Binding ShowHourTimeFields, Converter={StaticResource BoolToVisibilityConverter}}"
                                  SelectedIndex="0">
                        </ComboBox>
                        <ComboBox  Grid.Column="6"
                           ItemsSource="{Binding Minutes}"
                                  SelectedItem="{Binding SelectedEvent.EndMinutes}" 
                                  SelectedValue="{Binding SelectedEvent.EndMinutes ,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" 
                                  IsEnabled="{Binding IsInputEnabled}" 
                                  Visibility="{Binding ShowHourTimeFields, Converter={StaticResource BoolToVisibilityConverter}}"
                                  SelectedIndex="0">

                        </ComboBox>
                    </Grid>
                    <TextBlock   Grid.Row="11" Margin="5" Text="Description:" VerticalAlignment="Center"/>
                    <TextBox    Grid.Row="12" Text="{Binding SelectedEvent.Description, Mode=TwoWay,ValidatesOnDataErrors=true, NotifyOnValidationError=true}" IsEnabled="{Binding IsInputEnabled}"/>
                    <TextBlock   Grid.Row="13" Margin="5" Text="Notes:" VerticalAlignment="Center"/>
                    <TextBox    Grid.Row="14" Text="{Binding SelectedEvent.Notes, Mode=TwoWay}" IsEnabled="{Binding IsInputEnabled}"/>
                    <TextBlock Grid.Column="0" Margin="0,0,0,5" FontSize="20" FontWeight="Bold" HorizontalAlignment="Left"></TextBlock>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Grid>


</mah:MetroWindow>
