<Fluent:RibbonWindow x:Class="Great.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"    
    xmlns:conv="clr-namespace:Great.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    DataContext="{Binding Main, Source={StaticResource Locator}}"
    Title="Great 2.0" 
    Width="1024" 
    Height="768"
    MinWidth="800"
    MinHeight="600"
    WindowStartupLocation="CenterScreen" 
    WindowState="Maximized">
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Fluent:Ribbon Grid.Row="0">
            <Fluent:Ribbon.Resources>
                <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            </Fluent:Ribbon.Resources>
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Header="FILE">
                    <Fluent:BackstageTabControl Name="menuBackstageTabControl">
                        <Fluent:BackstageTabItem Header="Informations"/>
                        <Fluent:BackstageTabItem Name="factoriesBackstageTab" Header="Factories">
                            <Frame Source="/Views/Pages/FactoriesView.xaml"/>
                        </Fluent:BackstageTabItem>
                        <Fluent:SeparatorTabItem />
                        <Fluent:BackstageTabItem Header="Settings"/>
                        <Fluent:Button Name="exitButton" Header="Exit" Click="exitButton_Click"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
            <!--Contextual Tab Groups-->
            <Fluent:Ribbon.ContextualGroups>                
            </Fluent:Ribbon.ContextualGroups>
            <!--Tabs-->
            <Fluent:RibbonTabItem Header="HOME" Visibility="{Binding ElementName=timesheetTab, Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" 
                                  IsSelected="{Binding ElementName=timesheetTab, Path=IsSelected, Mode=OneWay}">
                <Fluent:RibbonGroupBox Header="Year">
                    <Fluent:TextBox Name="yearTextBox" Text="{Binding CurrentYear}" TextAlignment="Center" PreviewTextInput="yearTextBox_PreviewTextInput" SizeDefinition="Small" MaxLength="4">
                        <Fluent:TextBox.ToolTip>
                            <Fluent:ScreenTip Title="Current Year" Text="Set the current year." />
                        </Fluent:TextBox.ToolTip>
                    </Fluent:TextBox>
                    <Fluent:Gallery MaxItemsInRow="2">
                        <Fluent:Button Command="{Binding PreviousYearCommand}" SizeDefinition="Small" Icon="pack://application:,,,/Great;component/Images/sign-left.png">
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip Title="Previous Year" Text="Set the previous year." />
                            </Fluent:Button.ToolTip>
                        </Fluent:Button>
                        <Fluent:Button Command="{Binding NextYearCommand}" SizeDefinition="Small" Icon="pack://application:,,,/Great;component/Images/sign-right.png">
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip Title="Next Year" Text="Set the next year." />
                            </Fluent:Button.ToolTip>
                        </Fluent:Button>
                    </Fluent:Gallery>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Month">
                    <Fluent:RibbonGroupBox.Resources>
                        <sys:Int32 x:Key="Jan">1</sys:Int32>
                        <sys:Int32 x:Key="Feb">2</sys:Int32>
                        <sys:Int32 x:Key="Mar">3</sys:Int32>
                        <sys:Int32 x:Key="Apr">4</sys:Int32>
                        <sys:Int32 x:Key="May">5</sys:Int32>
                        <sys:Int32 x:Key="Jun">6</sys:Int32>
                        <sys:Int32 x:Key="Jul">7</sys:Int32>
                        <sys:Int32 x:Key="Aug">8</sys:Int32>
                        <sys:Int32 x:Key="Sep">9</sys:Int32>
                        <sys:Int32 x:Key="Oct">10</sys:Int32>
                        <sys:Int32 x:Key="Nov">11</sys:Int32>
                        <sys:Int32 x:Key="Dec">12</sys:Int32>
                    </Fluent:RibbonGroupBox.Resources>
                    <Fluent:ToggleButton Header="Jan" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Jan}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="1">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="January" Text="Set January as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Feb" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Feb}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="2">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="February" Text="Set February as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Mar" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Mar}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="3">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="March" Text="Set March as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Apr" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Apr}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="4">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="April" Text="Set April as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="May" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource May}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="5">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="May" Text="Set May as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Jun" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Jun}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="6">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="June" Text="Set June as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Jul" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Jul}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="7">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="July" Text="Set July as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Aug" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Aug}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="8">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="August" Text="Set August as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Sep" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Sep}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="9">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="September" Text="Set September as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Oct" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Oct}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="10">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="October" Text="Set October as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Nov" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Nov}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="11">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="November" Text="Set November as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Dec" Command="{Binding SetMonthCommand}" CommandParameter="{Binding Source={StaticResource Dec}}" SizeDefinition="Large" GroupName="gMonth">
                        <Fluent:ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMonth}" Value="12">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ToggleButton.Style>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="December" Text="Set December as the current month." />
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="HOME" Visibility="{Binding ElementName=carrentalTab, Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}}"
                                  IsSelected="{Binding ElementName=carrentalTab, Path=IsSelected, Mode=OneWay}">
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="HOME" Visibility="{Binding ElementName=expenseAccountTab, Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}}"
                                  IsSelected="{Binding ElementName=expenseAccountTab, Path=IsSelected, Mode=OneWay}">
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="TEST">
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <TabControl Grid.Row="1" TabStripPlacement="Bottom" Padding="0" BorderThickness="0">            
            <TabControl.Resources>
                <Style TargetType="{x:Type TabControl}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <DockPanel KeyboardNavigation.TabNavigation="Local" LastChildFill="True">
                                    <TabPanel IsItemsHost="True"
                                              Background="LightGray"
                                              DockPanel.Dock="{TemplateBinding TabStripPlacement}"/>
                                    <ContentPresenter ContentSource="SelectedContent" />
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border Name="Border">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,5"                                        
                                        TextElement.FontSize="20"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="#0072c6" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Name="timesheetTab" Header="Timesheet">
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label HorizontalAlignment="Center" Grid.Column="0" VerticalAlignment="Center" FontSize="20" FontWeight="Bold">
                        <Label.Resources>
                            <conv:IntToMonthConverter x:Key="IntToMonthConverter"/>
                        </Label.Resources>
                        <Label.LayoutTransform>
                            <TransformGroup>
                                <RotateTransform Angle="90" />
                                <ScaleTransform ScaleX="-1" ScaleY="-1"/>
                            </TransformGroup>
                        </Label.LayoutTransform>
                        <Label.Content>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} {1}">
                                        <Binding Path="CurrentMonth" Converter="{StaticResource IntToMonthConverter}" />
                                        <Binding Path="CurrentYear" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Label.Content>
                    </Label>
                    <DataGrid Name="workingDaysDataGrid"
                              Grid.Column="1"
                              HorizontalAlignment="Stretch" 
                              Margin="0,0,0,0" 
                              VerticalAlignment="Stretch" 
                              AutoGenerateColumns="False" 
                              CanUserReorderColumns="False" 
                              CanUserResizeColumns="False" 
                              CanUserResizeRows="False" 
                              CanUserSortColumns="False" 
                              IsReadOnly="True"                  
                              SelectionMode="Single"
                              HeadersVisibility="Column"
                              ItemsSource="{Binding WorkingDays}"
                              SelectedItem="{Binding SelectedWorkingDay}">
                        <DataGrid.Resources>
                            <Style TargetType="DataGridCell">
                                <Style.Setters>
                                    <Setter Property="TextBlock.TextAlignment" Value="Right" />
                                    <Setter Property="TextBlock.FontSize" Value="15" />
                                    <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                                </Style.Setters>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Week Nr." Binding="{Binding WeekNr_Display}" />
                            <DataGridTextColumn Header="Day" Binding="{Binding Day, StringFormat='dddd dd MMMM'}" />
                            <DataGridTextColumn Header="Total Time" Binding="{Binding TimePeriods.TotalDuration, StringFormat=hh\\:mm}" FontWeight="Bold" />
                            <DataGridTextColumn Header="Working Time" Binding="{Binding WorkingPeriods.TotalDuration, StringFormat=hh\\:mm}" />
                            <DataGridTextColumn Header="Travel Time" Binding="{Binding TravelPeriods.TotalDuration, StringFormat=hh\\:mm}" />
                            <DataGridTextColumn Header="Overtime 34%" Binding="{Binding Overtime34, StringFormat=hh\\:mm}" />
                            <DataGridTextColumn Header="Overtime 35%" Binding="{Binding Overtime35, StringFormat=hh\\:mm}" />
                            <DataGridTextColumn Header="Overtime 50%" Binding="{Binding Overtime50, StringFormat=hh\\:mm}" />
                            <DataGridTextColumn Header="Overtime 100%" Binding="{Binding Overtime100, StringFormat=hh\\:mm}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Column="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DataGrid ItemsSource="{Binding SelectedWorkingDay.Timesheets}"
                                SelectedItem="{Binding SelectedTimesheet}"
                                Grid.Row="0"
                                HorizontalAlignment="Stretch"                         
                                AutoGenerateColumns="False" 
                                CanUserReorderColumns="False" 
                                CanUserResizeColumns="False" 
                                CanUserResizeRows="False" 
                                CanUserSortColumns="False"
                                HeadersVisibility="Column"
                                IsReadOnly="True"
                                Height="150">
                            <DataGrid.Resources>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="TextBlock.TextAlignment" Value="Right" />
                                </Style>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Travel Start Time AM" Binding="{Binding TravelStartTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Work Start Time AM" Binding="{Binding WorkStartTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Work End Time AM" Binding="{Binding WorkEndTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Travel End Time AM" Binding="{Binding TravelEndTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Travel Start Time PM" Binding="{Binding TravelStartTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Work Start Time PM" Binding="{Binding WorkStartTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Work End Time PM" Binding="{Binding WorkEndTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="Travel End Time PM" Binding="{Binding TravelEndTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                                <DataGridTextColumn Header="FDL" Binding="{Binding FDL_Display}" Width="70" />
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Grid.Row="1">
                            <Grid.Resources>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Margin" Value="0,0,0,5" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="1" Grid.Column="0" Content="AM" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <Label Grid.Row="2" Grid.Column="0" Content="PM" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <Label Grid.Row="0" Grid.Column="1">
                                <TextBlock TextAlignment="Center">Travel<LineBreak/>Start Time</TextBlock>
                            </Label>
                            <Label Grid.Row="0" Grid.Column="2">
                                <TextBlock TextAlignment="Center">Work<LineBreak/>Start Time</TextBlock>
                            </Label>
                            <Label Grid.Row="0" Grid.Column="3">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">Work<LineBreak/>End Time</TextBlock>
                            </Label>
                            <Label Grid.Row="0" Grid.Column="4">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">Travel<LineBreak/>End Time</TextBlock>
                            </Label>
                            <TextBox Grid.Row="1" Grid.Column="1" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.TravelStartTimeAM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="1" Grid.Column="2" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.WorkStartTimeAM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="1" Grid.Column="3" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.WorkEndTimeAM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="1" Grid.Column="4" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.TravelEndTimeAM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="2" Grid.Column="1" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.TravelStartTimePM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="2" Grid.Column="2" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.WorkStartTimePM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="2" Grid.Column="3" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.WorkEndTimePM_t, StringFormat=hh\\:mm}"/>
                            <TextBox Grid.Row="2" Grid.Column="4" MaxLength="5" Width="50" FontSize="14" TextAlignment="Center" Text="{Binding TimesheetInfo.TravelEndTimePM_t, StringFormat=hh\\:mm}"/>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.Resources>
                                <Style TargetType="CheckBox">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>                                
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="1" Content="Car" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Label Grid.Row="0" Grid.Column="2" Content="Taxi" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Label Grid.Row="0" Grid.Column="3" Content="Aircraft" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Label Grid.Row="1" Grid.Column="0" Content="Going" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <Label Grid.Row="2" Grid.Column="0" Content="Return" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <CheckBox Grid.Row="1" Grid.Column="1" />
                            <CheckBox Grid.Row="1" Grid.Column="2"/>
                            <CheckBox Grid.Row="1" Grid.Column="3"/>
                            <CheckBox Grid.Row="2" Grid.Column="1"/>
                            <CheckBox Grid.Row="2" Grid.Column="2"/>
                            <CheckBox Grid.Row="2" Grid.Column="3"/>
                        </Grid>
                        <Grid Grid.Row="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Row="0" />
                            <ComboBox Grid.Row="1" />
                            <TextBox Grid.Row="2" />
                            <TextBox Grid.Row="3" />
                        </Grid>
                        <StackPanel Grid.Row="4" Orientation="Horizontal">
                            <Button Margin="10" Content="Clear" Command="{Binding ClearTimesheetCommand}" />
                            <Button Margin="10" Content="Save" Command="{Binding SaveTimesheetCommand}" CommandParameter="{Binding TimesheetInfo}" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Name="carrentalTab" Header="Car Rental" />
            <TabItem Name="expenseAccountTab" Header="Expense Account" />
        </TabControl>
        <Fluent:StatusBar Grid.Row="2">
        </Fluent:StatusBar>
    </Grid>
</Fluent:RibbonWindow>
