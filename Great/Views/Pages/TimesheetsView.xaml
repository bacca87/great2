<Page x:Class="Great.Views.Pages.TimesheetView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Great.Views.Pages"
      xmlns:conv="clr-namespace:Great.Converters"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d"
      DataContext="{Binding Timesheets, Source={StaticResource Locator}}"
      Title="Timesheet"
      Loaded="Page_Loaded">
    <Page.Resources>
        <conv:IntToMonthConverter x:Key="IntToMonthConverter"/>
        <CollectionViewSource x:Key="WorkingDaysCollectionView" Source="{Binding WorkingDays}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Date.Month" Converter="{StaticResource IntToMonthConverter}"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Page.Resources>
    <Grid Margin="10,0,10,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <DataGrid Name="workingDaysDataGrid"
                  Grid.Column="0"
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" 
                  AutoGenerateColumns="False" 
                  CanUserReorderColumns="False" 
                  CanUserResizeColumns="False" 
                  CanUserResizeRows="False" 
                  CanUserSortColumns="False" 
                  IsReadOnly="True"                  
                  SelectionMode="Single"
                  HeadersVisibility="Column"
                  ItemsSource="{Binding Source={StaticResource WorkingDaysCollectionView}}"
                  SelectedItem="{Binding SelectedWorkingDay}"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True" 
                  VirtualizingPanel.ScrollUnit ="Item" 
                  VirtualizingPanel.VirtualizationMode="Standard">
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Style.Setters>
                        <Setter Property="TextBlock.TextAlignment" Value="Right" />
                        <Setter Property="TextBlock.FontSize" Value="15" />
                        <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style.Setters>
                </Style>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Date.DayOfWeek}" Value="Saturday">
                            <Setter Property="Background" Value="LightBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Date.DayOfWeek}" Value="Sunday">
                            <Setter Property="Background" Value="Tomato" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsHoliday}" Value="True">
                            <Setter Property="Background" Value="Tomato" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="1">
                            <Setter Property="Background" Value="Orange" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="2">
                            <Setter Property="Background" Value="Pink" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/>
            </DataGrid.Resources>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel>
                                            <TextBlock Margin="10" FontSize="20" FontWeight="Bold">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} {1}">
                                                        <Binding Path="Name" />
                                                        <Binding Path="DataContext.CurrentYear" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Page}" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <ItemsPresenter />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Vacation Day" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsVacationDay, Mode=OneWay}" Command="{Binding SetVacationDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                    <MenuItem Header="Sick Leave" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsSickLeave, Mode=OneWay}" Command="{Binding SetSickLeaveCommand}" CommandParameter="{Binding SelectedWorkingDay}"/>
                    <Separator/>
                    <MenuItem Header="Day of Work" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsWorkDay, Mode=OneWay}" Command="{Binding SetWorkDayCommand}" CommandParameter="{Binding SelectedWorkingDay}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding ResetDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Week Nr." Binding="{Binding WeekNr_Display}" FontWeight="Bold" />
                <DataGridTextColumn Header="Day" Binding="{Binding Date, StringFormat='dddd dd MMMM'}" />
                <DataGridTextColumn Header="Total Time" Binding="{Binding TotalTime, StringFormat=N2}" FontWeight="Bold" />
                <DataGridTextColumn Header="Work Time" Binding="{Binding WorkTime, StringFormat=N2}" />
                <DataGridTextColumn Header="Travel Time" Binding="{Binding TravelTime, StringFormat=N2}" />
                <DataGridTextColumn Header="Hours of Leave" Binding="{Binding HoursOfLeave, StringFormat=N2}" />
                <DataGridTextColumn Header="Overtime 34%" Binding="{Binding Overtime34, StringFormat=N2}" />
                <DataGridTextColumn Header="Overtime 35%" Binding="{Binding Overtime35, StringFormat=N2}" />
                <DataGridTextColumn Header="Overtime 50%" Binding="{Binding Overtime50, StringFormat=N2}" />
                <DataGridTextColumn Header="Overtime 100%" Binding="{Binding Overtime100, StringFormat=N2}" />
                <DataGridTextColumn Header="Factories" Binding="{Binding Factories_Display}" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DataGrid ItemsSource="{Binding Timesheets}"                      
                      SelectedItem="{Binding SelectedTimesheet}"
                      Grid.Row="0"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"                         
                      AutoGenerateColumns="False" 
                      CanUserReorderColumns="False" 
                      CanUserResizeColumns="False" 
                      CanUserResizeRows="False" 
                      CanUserSortColumns="False"
                      HeadersVisibility="Column"
                      IsReadOnly="True"                      
                      Height="150">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell">
                        <Setter Property="TextBlock.TextAlignment" Value="Right" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Travel Start Time AM" Binding="{Binding TravelStartTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Work Start Time AM" Binding="{Binding WorkStartTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Work End Time AM" Binding="{Binding WorkEndTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Travel End Time AM" Binding="{Binding TravelEndTimeAM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Travel Start Time PM" Binding="{Binding TravelStartTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Work Start Time PM" Binding="{Binding WorkStartTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Work End Time PM" Binding="{Binding WorkEndTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="Travel End Time PM" Binding="{Binding TravelEndTimePM_t, StringFormat=hh\\:mm}" Width="70" />
                    <DataGridTextColumn Header="FDL" Binding="{Binding FDL1.Id}" Width="100" />
                    <DataGridTextColumn Header="Factory" Binding="{Binding FDL1.Factory1.Name}" Width="100" />
                </DataGrid.Columns>
            </DataGrid>
            <GroupBox Grid.Row="1" Header="Statistics" HorizontalAlignment="Left">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>                    
                    <Label Grid.Column="0" Grid.Row="0" Content="Working Timee:" HorizontalAlignment="Right"/>
                    <Label Grid.Column="1" Grid.Row="0">
                        <TextBlock Text="{Binding SelectedTimesheet.WorkTime, StringFormat=N2, FallbackValue=n/a, TargetNullValue=n/a, Mode=OneWay}" />
                    </Label>
                    <Label Grid.Column="0" Grid.Row="1" Content="Travel Time:" HorizontalAlignment="Right"/>
                    <Label Grid.Column="1" Grid.Row="1">
                        <TextBlock Text="{Binding SelectedTimesheet.TravelTime, StringFormat=N2, FallbackValue=n/a, TargetNullValue=n/a, Mode=OneWay}"/>
                    </Label>
                    <Label Grid.Column="0" Grid.Row="2" Content="Total Time:" HorizontalAlignment="Right"/>
                    <Label Grid.Column="1" Grid.Row="2">
                        <TextBlock Text="{Binding SelectedTimesheet.TotalTime, StringFormat=N2, FallbackValue=n/a, TargetNullValue=n/a, Mode=OneWay}"/>
                    </Label>                    
                </Grid>
            </GroupBox>
            <Grid Grid.Row="2">
                <Grid.Resources>
                    <Style TargetType="{x:Type xctk:MaskedTextBox}">
                        <Setter Property="Margin" Value="0,0,0,5" />
                        <Setter Property="MaxLength" Value="5" />
                        <Setter Property="Width" Value="50" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="Mask" Value="00:00" />
                        <Setter Property="PromptChar" Value=" "/>
                        <Setter Property="ValueDataType" Value="{x:Type sys:TimeSpan}" />
                        <Setter Property="AutoSelectBehavior" Value="OnFocus" />
                        <Setter Property="IsEnabled" Value="{Binding IsInputEnabled}"/>                        
                        <EventSetter Event="PreviewLostKeyboardFocus" Handler="MaskedTextBox_PreviewLostKeyboardFocus"/>
                        <EventSetter Event="PreviewTextInput" Handler="MaskedTextBox_PreviewTextInput"/>
                    </Style>                    
                    <conv:StringToTimeSpanConverter x:Key="StringToTimeSpanConverter" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="1" Grid.Column="0" Content="AM" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <Label Grid.Row="2" Grid.Column="0" Content="PM" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <Label Grid.Row="0" Grid.Column="1">
                    <TextBlock TextAlignment="Center">Travel<LineBreak/>Start Time</TextBlock>
                </Label>
                <Label Grid.Row="0" Grid.Column="2">
                    <TextBlock TextAlignment="Center">Work<LineBreak/>Start Time</TextBlock>
                </Label>
                <Label Grid.Row="0" Grid.Column="3">
                    <TextBlock TextWrapping="Wrap" TextAlignment="Center">Work<LineBreak/>End Time</TextBlock>
                </Label>
                <Label Grid.Row="0" Grid.Column="4">
                    <TextBlock TextWrapping="Wrap" TextAlignment="Center">Travel<LineBreak/>End Time</TextBlock>
                </Label>
                <xctk:MaskedTextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedTimesheetClone.TravelStartTimeAM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="1" Grid.Column="2" Text="{Binding SelectedTimesheetClone.WorkStartTimeAM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="1" Grid.Column="3" Text="{Binding SelectedTimesheetClone.WorkEndTimeAM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="1" Grid.Column="4" Text="{Binding SelectedTimesheetClone.TravelEndTimeAM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="2" Grid.Column="1" Text="{Binding SelectedTimesheetClone.TravelStartTimePM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="2" Grid.Column="2" Text="{Binding SelectedTimesheetClone.WorkStartTimePM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="2" Grid.Column="3" Text="{Binding SelectedTimesheetClone.WorkEndTimePM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
                <xctk:MaskedTextBox Grid.Row="2" Grid.Column="4" Text="{Binding SelectedTimesheetClone.TravelEndTimePM_t, StringFormat=hh\\:mm, Converter={StaticResource StringToTimeSpanConverter}}" />
            </Grid>
            <Grid Grid.Row="3">
                <GroupBox Header="FDL" HorizontalAlignment="Left" IsEnabled="{Binding IsInputEnabled}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="Number:" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" Margin="5" Width="100" ItemsSource="{Binding FDLs}" SelectedItem="{Binding SelectedTimesheetClone.FDL1}" SelectedValue="{Binding SelectedTimesheetClone.FDL}" DisplayMemberPath="Id" SelectedValuePath="Id"/>
                    </Grid>
                </GroupBox>
            </Grid>            
            <StackPanel Grid.Row="5" Orientation="Horizontal">
                <Button Margin="10" Content="Delete" Command="{Binding DeleteTimesheetCommand}" CommandParameter="{Binding SelectedTimesheet}" />
                <Button Margin="10" Content="Clear" Command="{Binding ClearTimesheetCommand}" />
                <Button Margin="10" Content="Save" Command="{Binding SaveTimesheetCommand}" CommandParameter="{Binding SelectedTimesheetClone}" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
