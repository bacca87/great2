<Page x:Class="Great.Views.Pages.ExpenseAccountView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Great.Views.Pages"
      xmlns:conv="clr-namespace:Great.Utils.Converters"
      xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:m="clr-namespace:Great.Models" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d" 
      DataContext="{Binding ExpenseAccount, Source={StaticResource Locator}}"
      Title="ExpenseAccount"
      Style="{DynamicResource MetroPage}">
    <Page.Resources>
        <CollectionViewSource x:Key="EACollectionView" Source="{Binding ExpenseAccounts}" IsLiveSortingRequested="True" >
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="IsNew" Direction="Descending" />
                <scm:SortDescription PropertyName="Id" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Page.Resources>
    <Grid Margin="10,0,10,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <DataGrid Name="EADataGridView"
                Grid.Column="0"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False" 
                CanUserReorderColumns="False" 
                CanUserResizeColumns="False" 
                CanUserResizeRows="False" 
                CanUserSortColumns="False" 
                IsReadOnly="True"                  
                SelectionMode="Single"
                HeadersVisibility="Column"
                ItemsSource="{Binding Source={StaticResource EACollectionView}}"
                SelectedItem="{Binding SelectedEA}"
                VirtualizingPanel.ScrollUnit ="Item" 
                VirtualizingPanel.VirtualizationMode="Standard">
            <DataGrid.Resources>
                <Style x:Key="BaseCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                    <Style.Setters>
                        <Setter Property="TextBlock.FontSize" Value="15" />
                        <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style.Setters>
                </Style>
                <Style x:Key="CenterAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                    <Style.Setters>
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style.Setters>
                </Style>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
                
                <conv:FDLStatusToImageConverter x:Key="FDLStatusToImageConverter"/>
                <conv:FDLStatusToTextConverter x:Key="FDLStatusToTextConverter"/>
            </DataGrid.Resources>
            <!--<DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Vacation Day" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsVacationDay, Mode=OneWay}" Command="{Binding SetVacationDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />                        
                    <Separator/>
                    <MenuItem Header="Day of Work" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsWorkDay, Mode=OneWay}" Command="{Binding SetWorkDayCommand}" CommandParameter="{Binding SelectedWorkingDay}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>-->
            <!--<DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding ResetDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
            </DataGrid.InputBindings>-->
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Status" CellStyle="{StaticResource CenterAligned}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding Status, Converter={StaticResource FDLStatusToImageConverter}}" Stretch="None">
                                    <Image.ToolTip>
                                        <TextBlock Text="{Binding Status, Converter={StaticResource FDLStatusToTextConverter}}"/>
                                    </Image.ToolTip>
                                </Image>
                                <Image Source="pack://application:,,,/Great;component/Images/16/star.png" Stretch="None" Style="{StaticResource DisabledImageStyle}" IsEnabled="{Binding FDL1.IsExtra}">
                                    <Image.ToolTip>
                                        <TextBlock Text="Extra"/>
                                    </Image.ToolTip>
                                </Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="FDL Number" Binding="{Binding FDL}" FontWeight="Bold" CellStyle="{StaticResource CenterAligned}"/>
                <DataGridTextColumn Header="Order" Binding="{Binding FDL1.Order}" CellStyle="{StaticResource CenterAligned}"/>
                <DataGridTextColumn Header="CdC" Binding="{Binding CdC}" CellStyle="{StaticResource CenterAligned}"/>
                <DataGridTextColumn Header="Week Nr" Binding="{Binding FDL1.WeekNr}" CellStyle="{StaticResource CenterAligned}"/>
                <DataGridTextColumn Header="File Name" Binding="{Binding FileName}" CellStyle="{StaticResource BaseCellStyle}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Column="1" Margin="10,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DataGrid 
                Grid.Row="0"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False" 
                CanUserReorderColumns="False" 
                CanUserResizeColumns="False" 
                CanUserResizeRows="False" 
                CanUserSortColumns="False" 
                SelectionMode="Single"
                HeadersVisibility="All"
                ItemsSource="{Binding Expenses}"
                SelectedItem="{Binding SelectedExpense, Converter={conv:DataGridItemConverter}}"
                VirtualizingPanel.ScrollUnit ="Item" 
                VirtualizingPanel.VirtualizationMode="Standard">
                <DataGrid.Resources>
                    <Style x:Key="BaseCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                        <Style.Setters>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="CenterAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                        <Style.Setters>
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="RightAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                        <Style.Setters>
                            <Setter Property="TextBlock.TextAlignment" Value="Right" />
                        </Style.Setters>
                    </Style>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">                        
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </DataGrid.Resources>
                <!--<DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Vacation Day" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsVacationDay, Mode=OneWay}" Command="{Binding SetVacationDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />                        
                    <Separator/>
                    <MenuItem Header="Day of Work" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsWorkDay, Mode=OneWay}" Command="{Binding SetWorkDayCommand}" CommandParameter="{Binding SelectedWorkingDay}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>-->
                <!--<DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding ResetDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
            </DataGrid.InputBindings>-->
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Expense Type" CellStyle="{StaticResource BaseCellStyle}">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox
                                  ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.ExpenseTypes}"
                                  SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.ExpenseType}"
                                  SelectedValue="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.Type}"
                                  DisplayMemberPath="Description"
                                  SelectedValuePath="Id"
                                  SelectedIndex="0" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.ExpenseType.Description}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Monday" Binding="{Binding MondayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Tuesday" Binding="{Binding TuesdayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Wednesday" Binding="{Binding WednesdayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Thursday" Binding="{Binding ThursdayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Friday" Binding="{Binding FridayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Saturday" Binding="{Binding SaturdayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Sunday" Binding="{Binding SundayAmount}" CellStyle="{StaticResource CenterAligned}"/>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="23*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Software versions and other notes:" VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="0,5,0,4"/>
                <TextBox Grid.Row="1" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding SelectedEAClone.Notes}" MaxLength="{Binding NotesMaxLength, Mode=OneTime}" IsEnabled="{Binding IsInputEnabled}" VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="2"/>
            </Grid>
            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Button Margin="10" Content="Clear" Command="{Binding ClearCommand}" />
                <Button Margin="10" Content="Save" Command="{Binding SaveCommand}" CommandParameter="{Binding SelectedEAClone}" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
