<Page x:Class="Great.Views.Pages.ExpenseAccountView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Great.Views.Pages"
      xmlns:conv="clr-namespace:Great.Utils.Converters"
      xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:m="clr-namespace:Great.Models.DTO" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:mvvm="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
      mc:Ignorable="d" 
      DataContext="{Binding ExpenseAccount, Source={StaticResource Locator}}"
      Title="ExpenseAccount"
      Style="{DynamicResource MetroPage}">
    <Page.Resources>
        <CollectionViewSource x:Key="EACollectionView" Source="{Binding ExpenseAccounts}" IsLiveSortingRequested="True" >
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="IsNew" Direction="Descending" />
                <scm:SortDescription PropertyName="FDL" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <conv:ZeroDoubleToNullConverter x:Key="ZeroDoubleToNullConverter"/>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DataGrid Grid.Row="0"
                Name="EADataGridView"                
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False" 
                CanUserReorderColumns="False" 
                CanUserResizeColumns="False" 
                CanUserResizeRows="False" 
                CanUserSortColumns="False" 
                IsReadOnly="True"                  
                SelectionMode="Single"
                HeadersVisibility="Column"
                ItemsSource="{Binding Source={StaticResource EACollectionView}}"
                SelectedItem="{Binding SelectedEA}"
                VirtualizingPanel.ScrollUnit ="Item" 
                VirtualizingPanel.VirtualizationMode="Standard">
                <DataGrid.Resources>
                    <Style x:Key="BaseCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                        <Style.Setters>
                            <Setter Property="TextBlock.FontSize" Value="15" />
                            <!--<Setter Property="TextBlock.FontFamily" Value="Verdana" />-->
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="CenterAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                        <Style.Setters>
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style.Setters>
                    </Style>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>

                    <conv:FDLStatusToImageConverter x:Key="FDLStatusToImageConverter"/>
                    <conv:FDLStatusToTextConverter x:Key="FDLStatusToTextConverter"/>
                </DataGrid.Resources>
                <!--<DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Vacation Day" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsVacationDay, Mode=OneWay}" Command="{Binding SetVacationDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />                        
                    <Separator/>
                    <MenuItem Header="Day of Work" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsWorkDay, Mode=OneWay}" Command="{Binding SetWorkDayCommand}" CommandParameter="{Binding SelectedWorkingDay}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>-->
                <!--<DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding ResetDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
            </DataGrid.InputBindings>-->
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Status" CellStyle="{StaticResource CenterAligned}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Status, Converter={StaticResource FDLStatusToImageConverter}}" Stretch="None">
                                        <Image.ToolTip>
                                            <TextBlock Text="{Binding Status, Converter={StaticResource FDLStatusToTextConverter}}"/>
                                        </Image.ToolTip>
                                    </Image>
                                    <Image Source="pack://application:,,,/Great2;component/Images/16/file-pdf.png" Stretch="None" Style="{StaticResource DisabledImageStyle}" IsEnabled="{Binding IsCompiled}">
                                        <Image.ToolTip>
                                            <TextBlock Text="Compiled"/>
                                        </Image.ToolTip>
                                    </Image>
                                    <Image Source="pack://application:,,,/Great2;component/Images/16/money-bag.png" Stretch="None" Width="16" Height="16" Style="{StaticResource DisabledImageStyle}" IsEnabled="{Binding IsRefunded}">
                                        <Image.ToolTip>
                                            <TextBlock Text="Cash Back"/>
                                        </Image.ToolTip>
                                    </Image>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="FDL Number" Binding="{Binding FDL_New_Display}" FontWeight="Bold" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Factory" Binding="{Binding FDL1.Factory1.Name}" FontWeight="Bold" CellStyle="{StaticResource BaseCellStyle}"/>
                    <DataGridTextColumn Header="Amount" CellStyle="{StaticResource CenterAligned}">
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{}{0}{1}">
                                <Binding Path="TotalAmount" Converter="{StaticResource ZeroDoubleToNullConverter}"/>
                                <Binding Path="CurrencyCode" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Deductions" CellStyle="{StaticResource CenterAligned}">
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{}{0}{1}">
                                <Binding Path="DeductionAmount" Converter="{StaticResource ZeroDoubleToNullConverter}"/>
                                <Binding Path="CurrencyCode" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="test" Binding="{Binding SelectedEA.DeductionAmount}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Currency" Binding="{Binding Currency1.Id}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Order" Binding="{Binding FDL1.Order}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="CdC" Binding="{Binding CdC}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="Week Nr" Binding="{Binding FDL1.WeekNr}" CellStyle="{StaticResource CenterAligned}"/>
                    <DataGridTextColumn Header="File Name" Binding="{Binding FileName}" CellStyle="{StaticResource BaseCellStyle}"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=LastErrorTextBlock}" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Text, ElementName=LastErrorTextBlock}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Image Source="pack://application:,,,/Great2;component/Images/72/sign-error.png" ToolTip="ERROR" Width="72" Height="72" VerticalAlignment="Top"/>
                <TextBlock x:Name="LastErrorTextBlock" Text="{Binding SelectedEA.LastError}" FontSize="15" FontWeight="Bold" FontStyle="Italic" TextWrapping="Wrap" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Column="1" Margin="10,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="80*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20*"/>
            </Grid.RowDefinitions>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <i:InvokeCommandAction Command="{Binding GotFocusCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="LostFocus">
                    <i:InvokeCommandAction Command="{Binding LostFocusCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5" HorizontalAlignment="Right">
                <TextBlock Text="CURRENCY:" VerticalAlignment="Center" Margin="0,0,5,0" FontSize="15"/>
                <ComboBox
                    SelectedItem="{Binding SelectedEA.Currency1}"
                    SelectedValue="{Binding SelectedEA.Currency, ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                    IsEnabled="{Binding IsInputEnabled}"
                    Text="{Binding CurrencyText, ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                    DisplayMemberPath="Description"
                    SelectedValuePath="Id"
                    Width="250"
                    FontSize="15"
                    IsEditable="True">
                    <ComboBox.Resources>
                        <CollectionViewSource x:Key="Items" Source="{Binding Currencies}" />
                    </ComboBox.Resources>
                    <ComboBox.ItemsSource>
                        <CompositeCollection>
                            <m:CurrencyDTO />
                            <CollectionContainer Collection="{Binding Source={StaticResource Items}}" />
                        </CompositeCollection>
                    </ComboBox.ItemsSource>
                </ComboBox>
            </StackPanel>
            <FrameworkElement Name="dummyElement" Visibility="Collapsed"/>
            <!--HACK FOR SET DATAGRID COLUMNS READONLY-->
            <DataGrid 
                Grid.Row="1"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False" 
                CanUserReorderColumns="False" 
                CanUserResizeColumns="False" 
                CanUserResizeRows="False" 
                CanUserSortColumns="False" 
                CanUserAddRows="{Binding SelectedEA.InsertExpenseEnabled}"
                SelectionMode="Single"
                HeadersVisibility="All"
                ItemsSource="{Binding SelectedEA.Expenses}"
                SelectedItem="{Binding SelectedExpense, Converter={conv:DataGridItemConverter}}"
                IsEnabled="{Binding IsInputEnabled}"
                VirtualizingPanel.ScrollUnit ="Item" 
                VirtualizingPanel.VirtualizationMode="Standard"
                GridLinesVisibility="Horizontal"
                ColumnWidth="*">
                <DataGrid.Resources>
                    <Style x:Key="BaseCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                        <Style.Setters>
                            <Setter Property="TextBlock.FontSize" Value="20" />
                            <Setter Property="BorderThickness" Value="5" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="CenterAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                        <Style.Setters>
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="RightAligned" TargetType="DataGridCell" BasedOn="{StaticResource BaseCellStyle}">
                        <Style.Setters>
                            <Setter Property="TextBlock.TextAlignment" Value="Right" />
                        </Style.Setters>
                    </Style>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>

                    <conv:EmptyStringToTrueConverter x:Key="EmptyStringToTrueConverter"/>
                </DataGrid.Resources>
                <!--<DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Vacation Day" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsVacationDay, Mode=OneWay}" Command="{Binding SetVacationDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />                        
                    <Separator/>
                    <MenuItem Header="Day of Work" IsCheckable="True" IsChecked="{Binding SelectedWorkingDay.IsWorkDay, Mode=OneWay}" Command="{Binding SetWorkDayCommand}" CommandParameter="{Binding SelectedWorkingDay}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>-->
                <!--<DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding ResetDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteDayCommand}" CommandParameter="{Binding SelectedWorkingDay}" />
            </DataGrid.InputBindings>-->
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Expense Type" CellStyle="{StaticResource BaseCellStyle}" Width="200">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox
                                    ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.ExpenseTypes}"
                                    SelectedItem="{Binding ExpenseType}"
                                    SelectedValue="{Binding Type}"
                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.ExpenseTypeText, ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                                    DisplayMemberPath="Description"
                                    SelectedValuePath="Id"
                                    FontSize="20"
                                    IsEditable="True"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExpenseType.Description}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding MondayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[0], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[0], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding TuesdayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[1], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[1], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding WednesdayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[2], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[2], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding ThursdayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[3], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[3], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding FridayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[4], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[4], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding SaturdayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[5], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[5], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding SundayAmount, TargetNullValue=''}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="{Binding DataContext.DaysOfWeek[6], Source={x:Reference dummyElement}, Converter={StaticResource EmptyStringToTrueConverter}}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.DaysOfWeek[6], RelativeSource={RelativeSource AncestorType=DataGrid}, StringFormat='ddd dd MMM'}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Total" Binding="{Binding TotalAmount, TargetNullValue='', Converter={StaticResource ZeroDoubleToNullConverter}}" CellStyle="{StaticResource CenterAligned}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="2" Margin="2,2,2,2" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="20">
                    <TextBlock.Text>
                        Total Amount
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="20">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{} {0}{1}">
                            <Binding Path="SelectedEA.TotalAmount" />
                            <Binding Path="SelectedEA.CurrencyCode" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="20">
                    Deducted Amount
                </TextBlock>
                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <TextBox FontSize="20" PreviewTextInput="TextBox_PreviewTextInput" TextAlignment="Right"  MinWidth="80"  
                        Text="{Binding SelectedEA.DeductionAmount,Mode=TwoWay,Converter={StaticResource ZeroDoubleToNullConverter}}" 
                    />
                    <TextBlock  FontSize="20">
                        <TextBlock.Text>
                            <Binding Path="SelectedEA.CurrencyCode" />
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Software versions and other notes:" VerticalAlignment="Center" Margin="0,5,0,4"/>
                <TextBox Grid.Row="1" Text="{Binding SelectedEA.Notes}" MaxLength="{Binding NotesMaxLength, Mode=OneTime}" IsEnabled="{Binding IsInputEnabled}" Margin="0,0,0,10" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" AcceptsReturn="True"/>
            </Grid>
        </Grid>
    </Grid>
</Page>
